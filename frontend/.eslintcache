[{"/home/ahmed/projects/careers/frontend/src/App.js":"1","/home/ahmed/projects/careers/frontend/src/reportWebVitals.js":"2","/home/ahmed/projects/careers/frontend/src/Components/ApplyJob.js":"3","/home/ahmed/projects/careers/frontend/src/Components/ListJobs.js":"4","/home/ahmed/projects/careers/frontend/src/index.js":"5","/home/ahmed/projects/careers/frontend/src/Api/global.js":"6","/home/ahmed/projects/careers/frontend/src/Api/BackendApi.js":"7"},{"size":426,"mtime":1606229337380,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606155469069,"results":"10","hashOfConfig":"9"},{"size":4044,"mtime":1606254012745,"results":"11","hashOfConfig":"9"},{"size":1420,"mtime":1606257394153,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1606166704367,"results":"13","hashOfConfig":"9"},{"size":46,"mtime":1606168486162,"results":"14","hashOfConfig":"9"},{"size":916,"mtime":1606252422901,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"15bibch",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/ahmed/projects/careers/frontend/src/App.js",["35"],"import {Router, BrowserRouter, Route} from 'react-router-dom';\nimport ApplyJob from './Components/ApplyJob';\nimport ListJobs from './Components/ListJobs';\nfunction App() {\n  return (\n    <BrowserRouter>\n        \n        <Route path=\"/apply/:id\" exact={true}>\n          <ApplyJob />\n        </Route>\n        <Route path=\"/\" exact={true}>\n          <ListJobs />\n        </Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n",["36","37"],"/home/ahmed/projects/careers/frontend/src/reportWebVitals.js",[],["38","39"],"/home/ahmed/projects/careers/frontend/src/Components/ApplyJob.js",["40"],"import { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport BackendApi from '../Api/BackendApi';\n\n// let { job_id } = useParams();  \n class ApplyJob extends Component{\n      \nconstructor(props){\n    super(props);\n    this.state = {\n        job_id: null,\n        is_submit: false,\n        applied: false\n    }\n    this.values = {\n        name: null,\n        university: null,\n        email: null,\n        dob: null,\n        notes: null,\n    }\n    this.apply = this.apply.bind(this); \n    this.saveData = this.saveData.bind(this); \n    this.onChange = this.onChange.bind(this); \n}\napply(event){\n    this.setState({is_submit: true});\n    for (var k in this.values) {\n        \n        this.values[k] = event.target[k].value\n    }\n    this.values.cv = this.state.cv;\n    this.values.job_id = this.state.job_id\n\n    this.saveData();\n    event.preventDefault();\n   \n    \n} \nsaveData(){\n    let backendApi = new BackendApi();\n        backendApi.post('application', this.values)\n        .then(res => {\n            if(res.status == 200){\n                this.setState({applied: true})\n            }\n        })\n\n        .catch((e => console.log(e)));\n}   \n\nonChange(e) {\n    let files = e.target.files || e.dataTransfer.files;\n    if (!files.length)\n          return;\n    this.createCV(files[0]);\n  }\n  createCV(file) {\n    let reader = new FileReader();\n    reader.onload = (e) => {\n      this.setState({\n        cv: e.target.result\n      })\n    };\n    reader.readAsDataURL(file);\n  }\n\ncomponentDidMount(){\n    this.setState({\n        job_id: this.props.match.params.id\n    });\n    \n}\n\n\n\nrender() {\n    if(this.state.applied){\n        return (\n            <div>\n                <div class=\"alert alert-info\" role=\"alert\">\n                applied Successfuly\n                    \n            </div>\n                <div className=\"text-center\"><Link to=\"/\">go to jobs list</Link></div>\n            </div>\n        );\n    }\n    return (\n        <div>\n        <div className=\"page-header\">\n            <h1>apply job here</h1>\n        </div>\n        <div className=\"panel panel-default\">\n            <div className=\"panel-body\">\n            <form encType=\"multipart/form-data\" onSubmit={this.apply}>\n            <div className=\"form-group\">\n                <label htmlFor=\"Name\">Name</label>\n                <input defaultValue=\"\" name=\"name\" type=\"text\" className=\"form-control\" id=\"Name\" placeholder=\"Name\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"University\">University</label>\n                <input defaultValue=\"\" name=\"university\" type=\"text\" className=\"form-control\" id=\"University\" placeholder=\"University\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"Email\">Email address</label>\n                <input defaultValue=\"\" name=\"email\" type=\"email\" className=\"form-control\" id=\"Email\" placeholder=\"Email\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"dob\">Date of birth</label>\n                <input defaultValue=\"\" name=\"dob\" type=\"date\" className=\"form-control\" id=\"dob\" placeholder=\"dob\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"notes\">notes \"why should we accept you\"</label>\n                <textarea defaultValue=\"\" name=\"notes\" id=\"notes\" className=\"form-control\" ></textarea>\n            </div>\n            \n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputFile\">File input</label>\n                <input onChange={this.onChange} defaultValue=\"\" type=\"file\" id=\"exampleInputFile\" />\n                <p className=\"help-block\">Example block-level help text here.</p>\n            </div>\n\n            {/* <button type=\"submit\" >Submit</button> */}\n            <input type=\"submit\" disabled={this.state.is_submit} className=\"btn btn-primary\" value=\"Submit\" />\n        </form>\n            </div>\n        </div>\n        </div>\n    )\n}\n}\nexport default withRouter(ApplyJob);",["41","42"],"/home/ahmed/projects/careers/frontend/src/Components/ListJobs.js",["43"],"/home/ahmed/projects/careers/frontend/src/index.js",[],"/home/ahmed/projects/careers/frontend/src/Api/global.js",[],"/home/ahmed/projects/careers/frontend/src/Api/BackendApi.js",[],{"ruleId":"44","severity":1,"message":"45","line":1,"column":9,"nodeType":"46","messageId":"47","endLine":1,"endColumn":15},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":44,"column":27,"nodeType":"56","messageId":"57","endLine":44,"endColumn":29},{"ruleId":"48","replacedBy":"58"},{"ruleId":"50","replacedBy":"59"},{"ruleId":"44","severity":1,"message":"60","line":13,"column":13,"nodeType":"46","messageId":"47","endLine":13,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["61"],["62"],"'jobs' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]